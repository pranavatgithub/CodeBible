function name equal but different in nature

---------------------------------------------
variety 1

class Adder{  
static int add(int a,int b){return a+b;}  
static int add(int a,int b,int c){return a+b+c;}  //no of args[] differenet
}  
class TestOverloading1{  
public static void main(String[] args){  
System.out.println(Adder.add(11,11));  
System.out.println(Adder.add(11,11,11));  
}}  

variety 2

class Adder{  
static int add(int a, int b){return a+b;}  
static double add(double a, double b){return a+b;}   //args[] different 
}  
class TestOverloading2{  
public static void main(String[] args){  
System.out.println(Adder.add(11,11));  
System.out.println(Adder.add(12.3,12.6));  
}}  

method overloading with type promotion
-----------------------------------------------

class OverloadingCalculation1{  
  void sum(int a,long b){System.out.println(a+b);}  
  void sum(int a,int b,int c){System.out.println(a+b+c);}  
  
  public static void main(String args[]){  
  OverloadingCalculation1 obj=new OverloadingCalculation1();  
  obj.sum(20,20);//now second int literal will be promoted to long  basically 20 was int but its promoted to long
  obj.sum(20,20,20);  
  
  }  
}  
