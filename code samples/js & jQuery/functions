//IIFE Immediately involked function
//===================================

(function () {
    alert();
})();

//this function will Immediately involked

//IIFE with args[]
//=================

(function IIFE(global) {
    //..............
    //..............
})(window);

//IIFE with fn as arg[]
//======================

var a = 2;
(function IIFE(def) {
    def(window);
})(function def(global) {
    var a = 3;
    console.log(a); // 3
    console.log(global.a); // 2
});

//CALLING A FUNCTION WITH DIFFERENT KIND OF ARG STRUCTURES

function foo(a, b) {
    console.log("a:" + a + ", b:" + b);
}
// spreading out array as parameters
foo.apply(null, [2, 3]); // a:2, b:3

var ø = Object.create( null );
foo.apply( ø, [2, 3] );  // safer binding. passing a pure empty obj, will prevent global obj mutations etc 

// currying with `bind(..)`
var bar = foo.bind(null, 2);
bar(3); // a:2, b:3

// ES6 default args[]

function foo( a = 42, b = a + 1 ) { // this is how
    console.log(
        arguments.length, a, b,
        arguments[0], arguments[1]
);
}
foo(); // 0 42 43 undefined undefined see even if we provided default value the arg[] is empty
foo( 10 ); // 1 10 11 10 undefined
foo( 10, undefined ); // 2 10 11 10 undefined
foo( 10, null ); // 2 10 null 10 null