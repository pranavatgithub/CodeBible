1) REMOVE LAST CHARACTER FROM A STRING
-------------------------------------------------------------------

var strnew=strold.substring(0,strold.length-1);


2) REPLACE ANYTHING BETWEEN '> (items in here)  <' AND PUT '><' INSTEAD
----------------------------------------------------------------------

var testi2 = testi.replace(/>([\s\S]*?)</g, '><');

3) XML COLOURING FUNCTION
----------------------------------------------------------------------(use with vkbeautify.js)

function colorXml(xml) {
        var out = "";

        for (var i = 0; i < xml.length; i++) {
            var c = xml.charAt(i);
            if (c == '<') {
                out += "<span style='color: #669acc'>";
                out += c;
                out += "</span><span style='color: #00cc00'>";
            }

            else if (c == '>') {
                out += c;
                out += "</span>";
            }


            else {
                if (xml.charAt(i + 1) == '>') {
                    out+=c;
                    out += "</span><span style='color: #669acc'>";
                }
                else if (xml.charAt(i + 1) == ' ') {
                    out += c;
                    out += "</span><span style='color:#0000FF'>";
                }
                else if(xml.charAt(i+1)=='"'){
                    out+=c;
                    out += "</span><span style='color:black'>";
                }
                else {
                    out += c;
                }

            }

        }
        return out;
    }

4) REPLACE A PARTICULAR STRING COMBO FROM ALL OVER THE STRING    (here xml:space='preserve' is replaced with '' or simply nothing)
---------------------------------------------------------------------------------------------------------------------------------

test = test.replace(/ xml:space='preserve'/g, '');

5) REPLACE NEW LINE CHARACTERS IN A STRING
-----------------------------------------------------------------------------------------

var testi2 = testi.replace(/\n|\r/g, "");

6) REMOVE ALL THE CONTENTS BETWEEN A SPECIFIED STRING WITH SPACES ALSO  (var a='>hello world!<';this function removes   hello world! between >< and remove the space also)
----------------------------------------------------------------------------

 function replaceMe(string) {
                        return string.replace(/\>.*?\</g, function (string) {
                            return string.replace(/\s/g, '');
                        });
                    }

7) SEPERATE A STRING USING , AS SEPERATING FACTOR
-----------------------------------------------------

var s2="hello,hai";
s2 = s2.split(","); //s2 returns an array where s2[0]="hello" & s2[1]="hai"

8) REMOVE SPACES IN FRONT AND BACK OF A STRING
---------------------------------------------

a = a.trim();

9) CHECKING FOR , OR | IN A STRING AND REPLACE IT 
--------------------------------------------------

if (servicecolumn.includes(",")) {
                            var b = servicecolumn.replace(/,/g, '</a>,<a>'); //replace , by </a>,<a>
                        }
else if (servicecolumn.includes("|")) {
                            var b = servicecolumn.replace(/(\||,)/g, "</a>|<a>"); //replace | by </a>|<a>
                        }
10)slice
---------
var domain = url.slice(7); // 7th pos to end is shown

var domain = url.slice(0,100); 0 start 100 end 0-100 letters shown

11) regex
-----------

var myRegEx = /To be/; // no quotes around regular expression
var quote = 'To be or not to be.';
var foundPosition = quote.search(myRegEx); // returns 0


12) replace '&' from everywhere
--------------------------------

var a="id=12&no_series=212&ClassName=1212&tableName=1212&temporal=1212";
a.replace(/\&/g, ' ');   // /g denotes globally everywhere

now a="id=12 no_series=212 ClassName=1212 tableName=1212 temporal=1212"; ok? 

13) String letter finding
-------------------------

var a="Pranav R"
a[0]=>"P"
a[1]=>"r" and so on...

you can only read like this cant alter ie, a[0]="x" cant be set.

14) <- SUBSTRING VS SUBSTR ->
------------------------------
SYNTAX 
------>substr<--------- //by length

"string".substr(index,length);
examples:-
var a="pranav";
a.substr(1,3)  -------> ran ( starting from 1,and print 3 chars including 1)
a.substr(1)  ---------> ranav ( can omit the 2nd param,if do so it will return all after the specified index)
a.substr(-1) ---------> v  (if -ve specified it starts from end of the string) //awesome

--------->substring<-------------

"string".substring(start,end);  //by index

examples
a="pranav";
a.substring(1,3) ----------> ra (starting from 1 and ending in 3 excludes 3)
a.substring(1) ------------> ranav (1 to end)

-ve not supported!!!!

ARRAY LIKE REPRESENTATION
==========================

var a="pranav";
a[0] will be p !!!! wow can be treated as an array

CHARCODES
=============

capital letters ASCII codes
capital A-Z = 65 to 90
small a-z = 97 to 122

how do i check a charcode???

simple a.charCodeAt() -------> returns code







