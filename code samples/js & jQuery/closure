closures --> function inside function beauty
=============================================
concept
-------

function Main(x){
    return function Sub(y){
        return x + y;
    }
}

Main(1)(2); ====>>> 3

or we can even call like this
var x = Main(1);
x(2) ===> gives 3

1.Main(1)  <-- get the rf of fn Sub()
2.Call Sub(2) <--- execute Sub(y) inner fn 

the cool thing is it remember the value of X so we will get 3

Complex example
================

function addTogether() {
    var args=Array.from(arguments);
    var x;
    if(args.length===2){
        x=args[0];
        var y=args[1];
        if(typeof x !=="number" || typeof  y !=="number"){
            return undefined;
        }   return x+y;
    }else{
        x=args[0];
        if(typeof x !=="number"){
            return undefined;
        }
        return function(y){     //<-------------this guy
          if(typeof y !=="number"){
            return undefined;
          }return x+y;
        };
    }
}
addTogether(2)(3);  //return 5 how???  first trigger  addTogether(2) ---> it will return  function(y)...  again it will call that function with next set of closure(3)
